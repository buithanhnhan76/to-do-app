{"version":3,"sources":["reportWebVitals.js","Components/Clock.jsx","Components/Tasks.jsx","utils/paginate.js","Components/Button.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Clock","props","state","date","Date","setInterval","tick","this","setState","toLocaleTimeString","Component","Tasks","currentPage","pageSize","handlePageChange","data","selectedPage","selected","willPower","paginateTasks","items","pageNumber","startIndex","_","slice","take","value","paginate","tasks","map","task","title","id","onPageChange","marginPagesDisplayed","containerClassName","pageClassName","nextClassName","previousClassName","breakClassName","activeClassName","pageLinkClassName","nextLinkClassName","previousLinkClassName","breakLinkClassName","activeLinkClassName","Button","onClick","className","App","axios","get","apiTasks","handleClick","ReactDOM","render","document","getElementById"],"mappings":"uLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,oDCyBCQ,G,wDA3BX,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAEDC,MAAQ,CAACC,KAAM,IAAIC,MAHR,E,gEAME,IAAD,OAEjBC,aAAY,kBAAM,EAAKC,SAAO,O,6BAK9BC,KAAKC,SAAS,CAACL,KAAM,IAAIC,S,+BAIzB,OACE,gCACE,4CAEA,wCAAWG,KAAKL,MAAMC,KAAKM,qBAA3B,e,GAtBUC,c,sCCiDLC,E,4MA9CXT,MAAQ,CAEJU,YAAa,EACbC,SAAU,G,EAEdC,iBAAmB,SAACC,GAEhB,IAAIC,EAAeD,EAAKE,SACxB,EAAKT,SAAS,CAACI,YAAaI,K,uDAEtB,IAAD,EACqBT,KAAKN,MAAxBiB,EADF,EACEA,UACDC,ECjBP,SAAkBC,EAAOC,EAAYR,GACxC,IAAMS,GAAcD,EAAa,GAAKR,EACtC,OAAOU,IAAEH,GAAOI,MAAMF,GAAYG,KAAKZ,GAAUa,QDevBC,CAFjB,EACYC,MACoBrB,KAAKL,MAAMU,YAAYL,KAAKL,MAAMW,UACvE,OACKK,EACD,gCACI,4DACA,6BACKC,EAAcU,KAAI,SAAAC,GAAI,OACvB,6BAAmBA,EAAKC,OAAfD,EAAKE,SAGlB,cAAC,IAAD,CAAeC,aAAc1B,KAAKO,iBAClCoB,qBAAsB,EACtBC,mBAAmB,aACnBC,cAAc,YACdC,cAAc,YACdC,kBAAkB,YAClBC,eAAe,YACfC,gBAAgB,mBAChBC,kBAAkB,YAClBC,kBAAkB,YAClBC,sBAAsB,YACtBC,mBAAmB,YACnBC,oBAAoB,iBAIxB,8BAEQ,4E,GAzCAnC,aEWLoC,E,uKAdF,IAEE5B,EAAaX,KAAKN,MAAlBiB,UACP,OAEI,aADA,CACA,UAAQ6B,QAASxC,KAAKN,MAAM8C,QAASC,UAAY9B,EAAW,iBAAiB,kBAA7E,SAGEA,EAAY,SAAW,e,GAThBR,a,iBC2CNuC,E,4MArCb/C,MAAQ,CAEN0B,MAAO,GAEPV,WAAW,G,kMAIYgC,IAAMC,IAAI,8C,OAA3BC,E,OACN7C,KAAKC,SAAS,CAACoB,MAAOwB,EAASrC,O,0IAI/BR,KAAKC,SAAS,CAACU,WAAYX,KAAKL,MAAMgB,c,+BAG7B,IAAD,SAEkBX,KAAKL,MAAxB0B,EAFC,EAEDA,MAAMV,EAFL,EAEKA,UACb,OACA,sBAAK8B,UAAU,uBAAf,UACI,cAAC,EAAD,IACA,sBAAKA,UAAU,sBAAf,UACE,qBAAKA,UAAU,SAAf,SACE,cAAC,EAAD,CAAOpB,MAASA,EAAOV,UAAWA,MAEpC,qBAAK8B,UAAU,QAAf,SACE,cAAC,EAAD,CAAQ9B,UAAWA,EAAW6B,QAAS,kBAAM,EAAKM,6B,GA5B5C3C,aCDlB4C,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BlE,M","file":"static/js/main.aab15f17.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass Clock extends Component{\r\n    constructor(props){\r\n      super(props);\r\n      // initial date with Date type js (Wed Jul 21 2021 16:34:45 GMT+0700 (Indochina Time))\r\n      this.state = {date: new Date()};\r\n    };\r\n  \r\n    componentDidMount(){\r\n      // call tick every 1000 miliseconds\r\n      setInterval(() => this.tick(),1000);\r\n    };\r\n\r\n    // set date with a new date\r\n    tick(){\r\n      this.setState({date: new Date()});\r\n    };\r\n  \r\n    render(){\r\n      return (\r\n        <div>\r\n          <h1>Hello Guy!</h1>\r\n          {/* toLocaleTimeString returns time like 04:03:01 pm */}\r\n          <h2>It is {this.state.date.toLocaleTimeString()}. </h2>\r\n        </div>\r\n      )\r\n    };\r\n  };\r\n\r\nexport default Clock;","import React, { Component } from 'react';\r\n// pagination\r\nimport ReactPaginate from 'react-paginate';\r\n// paginate data\r\nimport { paginate } from '../utils/paginate';\r\n \r\nclass Tasks extends Component {\r\n    state = {\r\n        // current page && pagerange\r\n        currentPage: 0,\r\n        pageSize: 5,\r\n    }\r\n    handlePageChange = (data) => {\r\n        // pick selected from data: 1,2,3 \r\n        let selectedPage = data.selected;\r\n        this.setState({currentPage: selectedPage});\r\n    }\r\n    render() { \r\n        const {willPower,tasks} = this.props;\r\n        const paginateTasks = paginate(tasks,this.state.currentPage,this.state.pageSize);\r\n        return ( \r\n            (willPower)?    \r\n            <div>\r\n                <h1>This Is Your Tasks Today !</h1>\r\n                <ul>\r\n                    {paginateTasks.map(task => \r\n                    <li key={task.id}>{task.title}</li>\r\n                    )}\r\n                </ul>\r\n                <ReactPaginate onPageChange={this.handlePageChange}\r\n                marginPagesDisplayed={2}\r\n                containerClassName=\"pagination\"\r\n                pageClassName=\"page-item\"\r\n                nextClassName=\"page-item\"\r\n                previousClassName=\"page-item\"\r\n                breakClassName=\"page-item\"\r\n                activeClassName=\"page-item active\"\r\n                pageLinkClassName=\"page-link\"\r\n                nextLinkClassName=\"page-link\"\r\n                previousLinkClassName=\"page-link\"\r\n                breakLinkClassName=\"page-link\"\r\n                activeLinkClassName=\"page-link\"\r\n                />\r\n            </div>\r\n            :\r\n            <div>\r\n                    {/* if willPower is false, then this h1 is printed */}\r\n                    <h1>There're somethings you need to do !</h1>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Tasks;","import _ from 'lodash';\r\n\r\nexport function paginate(items, pageNumber, pageSize){\r\n    const startIndex = (pageNumber - 1) * pageSize;\r\n    return _(items).slice(startIndex).take(pageSize).value();\r\n}","import React, { Component } from 'react';\r\n\r\nclass Button extends Component {\r\n    render() {\r\n        // pick willPower from app.js\r\n        const {willPower} = this.props;\r\n        return ( \r\n            // btn class = success when not click and in danger if user want to finish\r\n            <button onClick={this.props.onClick} className={(willPower)?\"btn btn-danger\":\"btn btn-success\"}\r\n            >\r\n            {/* label is Get It when user not click and Finish after user click */}\r\n            { willPower ? \"Finish\" : \"Get it\"}\r\n            </button>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Button;","import './App.css';\r\nimport React, {Component} from 'react';\r\nimport Clock from './Components/Clock';\r\nimport Tasks from './Components/Tasks';\r\nimport Button from './Components/Button';\r\nimport axios from 'axios';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    // your tasks\r\n    tasks: [],\r\n    // willPower: you will do it ?, default is false\r\n    willPower: false,\r\n  };\r\n  async componentDidMount(){\r\n    // api tasks is the task received from json\r\n    const apiTasks = await axios.get(\"https://jsonplaceholder.typicode.com/todos\");\r\n    this.setState({tasks: apiTasks.data});\r\n  }\r\n  // when click, set willPower != willPower \r\n  handleClick(){\r\n    this.setState({willPower: !this.state.willPower});\r\n  }\r\n\r\n  render () {\r\n    // pick tasks and willPower from state\r\n    const {tasks,willPower} = this.state;\r\n    return (\r\n    <div className=\"container-fluid mt-3\">\r\n        <Clock />\r\n        <div className=\"row container-fluid\">\r\n          <div className=\"col-10\">\r\n            <Tasks tasks = {tasks} willPower={willPower}/>\r\n          </div>\r\n          <div className=\"col-2\">\r\n            <Button willPower={willPower} onClick={() => this.handleClick()}/>\r\n          </div>\r\n        </div>\r\n        \r\n        \r\n    </div>\r\n  );\r\n  }\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}