{"version":3,"sources":["reportWebVitals.js","Components/Clock.jsx","Components/Note.jsx","Components/Button.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Clock","props","state","date","Date","setInterval","tick","this","setState","toLocaleTimeString","Component","Note","willPower","tasks","map","task","Button","onClick","className","App","handleClick","ReactDOM","render","document","getElementById"],"mappings":"sLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,4BCyBCQ,G,wDA3BX,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAEDC,MAAQ,CAACC,KAAM,IAAIC,MAHR,E,gEAME,IAAD,OAEjBC,aAAY,kBAAM,EAAKC,SAAO,O,6BAK9BC,KAAKC,SAAS,CAACL,KAAM,IAAIC,S,+BAIzB,OACE,gCACE,4CAEA,wCAAWG,KAAKL,MAAMC,KAAKM,qBAA3B,e,GAtBUC,cCoBLC,E,uKAnBP,OADoBJ,KAAKN,MAAlBW,UAGH,gCACI,4DACA,6BACKL,KAAKN,MAAMY,MAAMC,KAAI,SAAAC,GAAI,OAC1B,6BAAgBA,GAAPA,WAKjB,8BAEQ,4E,GAhBDL,aCeJM,E,uKAdF,IAEEJ,EAAaL,KAAKN,MAAlBW,UACP,OAEI,aADA,CACA,UAAQK,QAASV,KAAKN,MAAMgB,QAASC,UAAYN,EAAW,iBAAiB,kBAA7E,SAGEA,EAAY,SAAW,e,GAThBF,aCyCNS,E,4MApCbjB,MAAQ,CAENW,MAAO,CACP,kBACA,+CAGAD,WAAW,G,4DAKXL,KAAKC,SAAS,CAACI,WAAYL,KAAKL,MAAMU,c,+BAG7B,IAAD,SAEkBL,KAAKL,MAAxBW,EAFC,EAEDA,MAAMD,EAFL,EAEKA,UACb,OACA,sBAAKM,UAAU,iBAAf,UACI,cAAC,EAAD,IACA,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CAAML,MAASA,EAAOD,UAAWA,MAEnC,qBAAKM,UAAU,QAAf,SACE,cAAC,EAAD,CAAQN,UAAWA,EAAWK,QAAS,kBAAM,EAAKG,6B,GA3B5CV,a,MCClBW,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BjC,M","file":"static/js/main.aec1a124.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass Clock extends Component{\r\n    constructor(props){\r\n      super(props);\r\n      // initial date with Date type js (Wed Jul 21 2021 16:34:45 GMT+0700 (Indochina Time))\r\n      this.state = {date: new Date()};\r\n    };\r\n  \r\n    componentDidMount(){\r\n      // call tick every 1000 miliseconds\r\n      setInterval(() => this.tick(),1000);\r\n    };\r\n\r\n    // set date with a new date\r\n    tick(){\r\n      this.setState({date: new Date()});\r\n    };\r\n  \r\n    render(){\r\n      return (\r\n        <div>\r\n          <h1>Hello Guy!</h1>\r\n          {/* toLocaleTimeString returns time like 04:03:01 pm */}\r\n          <h2>It is {this.state.date.toLocaleTimeString()}. </h2>\r\n        </div>\r\n      )\r\n    };\r\n  };\r\n\r\nexport default Clock;","import React, { Component } from 'react';\r\n\r\nclass Note extends Component {\r\n    render() { \r\n        const {willPower} = this.props;\r\n        return ( \r\n            (willPower)?    \r\n            <div>\r\n                <h1>This Is Your Tasks Today !</h1>\r\n                <ul>\r\n                    {this.props.tasks.map(task => \r\n                    <li key={task}>{task}</li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n            :\r\n            <div>\r\n                    {/* if willPower is false, then this h1 is printed */}\r\n                    <h1>There're somethings you need to do !</h1>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Note;","import React, { Component } from 'react';\r\n\r\nclass Button extends Component {\r\n    render() {\r\n        // pick willPower from app.js\r\n        const {willPower} = this.props;\r\n        return ( \r\n            // btn class = success when not click and in danger if user want to finish\r\n            <button onClick={this.props.onClick} className={(willPower)?\"btn btn-danger\":\"btn btn-success\"}\r\n            >\r\n            {/* label is Get It when user not click and Finish after user click */}\r\n            { willPower ? \"Finish\" : \"Get it\"}\r\n            </button>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Button;","import './App.css';\r\nimport React, {Component} from 'react';\r\nimport Clock from './Components/Clock';\r\nimport Note from './Components/Note';\r\nimport Button from './Components/Button';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    // your tasks\r\n    tasks: [\r\n    \" Reactjs: Axios\",\r\n    \" Improve: Html, Css, JavaScript, Bootstrap4\"\r\n    ],\r\n    // willPower: you will do it ?, default is false\r\n    willPower: false,\r\n  };\r\n\r\n  // when click, set willPower != willPower \r\n  handleClick(){\r\n    this.setState({willPower: !this.state.willPower});\r\n  }\r\n\r\n  render () {\r\n    // pick tasks and willPower from state\r\n    const {tasks,willPower} = this.state;\r\n    return (\r\n    <div className=\"container mt-3\">\r\n        <Clock />\r\n        <div className=\"row\">\r\n          <div className=\"col-8\">\r\n            <Note tasks = {tasks} willPower={willPower}/>\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Button willPower={willPower} onClick={() => this.handleClick()}/>\r\n          </div>\r\n        </div>\r\n        \r\n        \r\n    </div>\r\n  );\r\n  }\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}